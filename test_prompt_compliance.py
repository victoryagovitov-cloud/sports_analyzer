#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–º–ø—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import os
import logging
from scores24_only_controller import scores24_only_controller
from prompt_compliant_analyzer import get_prompt_analyzer
from prompt_telegram_formatter import prompt_telegram_formatter
from moscow_time import format_moscow_time_for_telegram
from multi_source_controller import MatchData

logging.basicConfig(level=logging.INFO)

def test_prompt_compliance():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ–º–ø—Ç—É"""
    print("üéØ –¢–ï–°–¢ –ü–û–õ–ù–û–ì–û –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –ü–†–û–ú–ü–¢–£")
    print("=" * 45)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
    api_key = os.getenv('OPENAI_API_KEY')
    if not api_key:
        print("‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print("‚úÖ OpenAI API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
    moscow_time = format_moscow_time_for_telegram()
    print(f"üïê –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: {moscow_time}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¢–û–õ–¨–ö–û —Å scores24.live
    print("\nüîç –¢–ï–°–¢: –î–∞–Ω–Ω—ã–µ –¢–û–õ–¨–ö–û —Å scores24.live")
    print("=" * 40)
    
    sports = ['football', 'tennis', 'table_tennis', 'handball']
    all_matches = []
    
    for sport in sports:
        try:
            matches = scores24_only_controller.get_live_matches(sport)
            all_matches.extend(matches)
            print(f"üìä {sport}: {len(matches)} –º–∞—Ç—á–µ–π —Å scores24.live")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –º–∞—Ç—á–µ–π
            for i, match in enumerate(matches[:2]):
                print(f"  {i+1}. {match.team1} vs {match.team2} ({match.score}, {match.minute}') - {match.league}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è {sport}: {e}")
    
    print(f"\nüìà –í—Å–µ–≥–æ –º–∞—Ç—á–µ–π —Å scores24.live: {len(all_matches)}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º –ø—Ä–æ–º–ø—Ç–∞
    if all_matches:
        print("\nü§ñ –¢–ï–°–¢: –ê–Ω–∞–ª–∏–∑ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º –ø—Ä–æ–º–ø—Ç–∞")
        print("=" * 40)
        
        try:
            analyzer = get_prompt_analyzer(api_key)
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ñ—É—Ç–±–æ–ª –ø–æ–∫–∞  
            football_matches = []
            for m in all_matches:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Ñ—É—Ç–±–æ–ª—å–Ω—ã–µ –º–∞—Ç—á–∏
                if hasattr(m, 'sport') and m.sport == 'football':
                    football_matches.append(m)
                elif not hasattr(m, 'sport'):
                    # –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—è sport, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
                    m.sport = 'football'
                    football_matches.append(m)
            
            # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 7 –º–∞—Ç—á–µ–π (—Ç–µ, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ —Å scores24)
            football_matches = all_matches[:7]  # –ü–µ—Ä–≤—ã–µ 7 - —ç—Ç–æ —Ñ—É—Ç–±–æ–ª
            
            if football_matches:
                print(f"‚öΩ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º {len(football_matches)} —Ñ—É—Ç–±–æ–ª—å–Ω—ã—Ö –º–∞—Ç—á–µ–π...")
                recommendations = analyzer.analyze_football_matches(football_matches)
                
                if recommendations:
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(recommendations)} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
                    
                    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –ø—Ä–æ–º–ø—Ç—É
                    print("\nüì± –¢–ï–°–¢: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ —à–∞–±–ª–æ–Ω—É –ø—Ä–æ–º–ø—Ç–∞")
                    print("=" * 45)
                    
                    formatted_report = prompt_telegram_formatter.format_report_by_prompt(recommendations)
                    print("\n" + "="*50)
                    print("–û–¢–ß–ï–¢ –ü–û –®–ê–ë–õ–û–ù–£ –ü–†–û–ú–ü–¢–ê:")
                    print("="*50)
                    print(formatted_report)
                    print("="*50)
                    
                    return True
                else:
                    print("‚ùå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (—Å—Ç—Ä–æ–≥–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–æ–º–ø—Ç–∞)")
            else:
                print("‚ùå –ù–µ—Ç —Ñ—É—Ç–±–æ–ª—å–Ω—ã—Ö –º–∞—Ç—á–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")
    
    return False

def test_time_format():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏"""
    print("\nüïê –¢–ï–°–¢ –ú–û–°–ö–û–í–°–ö–û–ì–û –í–†–ï–ú–ï–ù–ò")
    print("=" * 30)
    
    time_str = format_moscow_time_for_telegram()
    print(f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {time_str}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç
    if "–ú–°–ö" in time_str and ":" in time_str:
        print("‚úÖ –§–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")
        return True
    else:
        print("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏")
        return False

def test_scores24_only():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¢–û–õ–¨–ö–û scores24.live"""
    print("\nüìä –¢–ï–°–¢: –¢–û–õ–¨–ö–û scores24.live")
    print("=" * 35)
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞
        sports_urls = {
            'football': 'https://scores24.live/ru/soccer?matchesFilter=live',
            'tennis': 'https://scores24.live/ru/tennis?matchesFilter=live',
            'table_tennis': 'https://scores24.live/ru/table-tennis?matchesFilter=live',
            'handball': 'https://scores24.live/ru/handball?matchesFilter=live'
        }
        
        total_matches = 0
        
        for sport, url in sports_urls.items():
            matches = scores24_only_controller.get_live_matches(sport)
            total_matches += len(matches)
            print(f"‚úÖ {sport}: {len(matches)} –º–∞—Ç—á–µ–π")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏—Å—Ç–æ—á–Ω–∏–∫ —Ç–æ–ª—å–∫–æ scores24
            for match in matches[:1]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–π –º–∞—Ç—á
                source = getattr(match, 'source', 'unknown')
                if 'scores24' in source.lower():
                    print(f"  ‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: {source}")
                else:
                    print(f"  ‚ö†Ô∏è  –ò—Å—Ç–æ—á–Ω–∏–∫: {source}")
        
        print(f"\nüìà –ò—Ç–æ–≥–æ –º–∞—Ç—á–µ–π –¢–û–õ–¨–ö–û —Å scores24.live: {total_matches}")
        return total_matches > 0
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è scores24: {e}")
        return False

if __name__ == "__main__":
    print("üéØ –ü–û–õ–ù–´–ô –¢–ï–°–¢ –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –ü–†–û–ú–ü–¢–£")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    time_ok = test_time_format()
    scores24_ok = test_scores24_only()
    analysis_ok = test_prompt_compliance()
    
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"üïê –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: {'‚úÖ' if time_ok else '‚ùå'}")
    print(f"üìä –¢–æ–ª—å–∫–æ scores24.live: {'‚úÖ' if scores24_ok else '‚ùå'}")
    print(f"ü§ñ –ê–Ω–∞–ª–∏–∑ –ø–æ –ø—Ä–æ–º–ø—Ç—É: {'‚úÖ' if analysis_ok else '‚ùå'}")
    
    if time_ok and scores24_ok and analysis_ok:
        print("\nüéâ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ –ü–†–û–ú–ü–¢–£!")
        print("üöÄ –ì–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω")
    else:
        print("\n‚ö†Ô∏è  –¢—Ä–µ–±—É—é—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    
    print("=" * 50)