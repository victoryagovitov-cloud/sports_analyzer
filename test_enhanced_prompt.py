#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –º–∞—Ç—á–µ–π
"""

import os
import logging
from enhanced_openai_analyzer import EnhancedOpenAIAnalyzer
from enhanced_telegram_formatter import enhanced_formatter
from totals_calculator import totals_calculator
from multi_source_controller import MatchData

logging.basicConfig(level=logging.INFO)

def test_enhanced_analyzer():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä"""
    print("ü§ñ –¢–ï–°–¢ –£–õ–£–ß–®–ï–ù–ù–û–ì–û OPENAI –ê–ù–ê–õ–ò–ó–ê–¢–û–†–ê")
    print("=" * 45)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
    api_key = os.getenv('OPENAI_API_KEY')
    if not api_key:
        print("‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: export OPENAI_API_KEY='–≤–∞—à_–∫–ª—é—á'")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    analyzer = EnhancedOpenAIAnalyzer(api_key)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if not analyzer.test_enhanced_connection():
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OpenAI")
        return False
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –º–∞—Ç—á–∏ –ø–æ –Ω–æ–≤—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º
    test_matches = [
        # –§—É—Ç–±–æ–ª: 25-75 –º–∏–Ω—É—Ç–∞, –Ω–µ –Ω–∏—á—å—è
        MatchData(
            sport='football',
            team1='Manchester City',
            team2='Brighton',
            score='2:1',
            minute='67',
            league='Premier League',
            link='test'
        ),
        
        # –¢–µ–Ω–Ω–∏—Å: –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –ø–æ —Å–µ—Ç–∞–º
        MatchData(
            sport='tennis',
            team1='–î–∂–æ–∫–æ–≤–∏—á –ù.',
            team2='–ù–∞–¥–∞–ª—å –†.',
            score='1-0 (6-4, 3-2)',
            minute='',
            league='ATP Masters',
            link='test'
        ),
        
        # –ì–∞–Ω–¥–±–æ–ª: ‚â•4 –≥–æ–ª–æ–≤ —Ä–∞–∑—Ä—ã–≤, –≤—Ç–æ—Ä–∞—è –ø–æ–ª–æ–≤–∏–Ω–∞
        MatchData(
            sport='handball',
            team1='–ë–∞—Ä—Å–µ–ª–æ–Ω–∞',
            team2='–ö–∏–ª—å',
            score='32:26',
            minute='48',
            league='Champions League',
            link='test'
        )
    ]
    
    print(f"üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º {len(test_matches)} –º–∞—Ç—á–µ–π —Å –Ω–æ–≤—ã–º–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏:")
    
    all_recommendations = []
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞
    for sport_type in ['football', 'tennis', 'handball']:
        sport_matches = [m for m in test_matches if getattr(m, 'sport', '') == sport_type]
        
        if sport_matches:
            print(f"\nüîç –ê–Ω–∞–ª–∏–∑ {sport_type}:")
            for match in sport_matches:
                print(f"  - {match.team1} vs {match.team2} ({match.score}, {match.minute}') - {match.league}")
            
            try:
                recommendations = analyzer.analyze_matches_with_enhanced_gpt(sport_matches, sport_type)
                all_recommendations.extend(recommendations)
                
                if recommendations:
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(recommendations)} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è {sport_type}")
                else:
                    print(f"‚ùå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è {sport_type} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ {sport_type}: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ—Ç–∞–ª—ã –¥–ª—è –≥–∞–Ω–¥–±–æ–ª–∞
    handball_matches = [m for m in test_matches if getattr(m, 'sport', '') == 'handball']
    if handball_matches:
        print(f"\nüìä –¢–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞ —Ç–æ—Ç–∞–ª–æ–≤:")
        for match in handball_matches:
            totals_data = totals_calculator.calculate_handball_totals(match)
            if totals_data:
                print(f"  ‚úÖ {match.team1} vs {match.team2}: {totals_data['recommendation']} (—Ç–µ–º–ø: {totals_data['tempo']})")
                
                # –°–æ–∑–¥–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –ø–æ —Ç–æ—Ç–∞–ª–∞–º
                totals_rec = totals_calculator.create_totals_recommendation(match, totals_data)
                if totals_rec:
                    all_recommendations.append(totals_rec)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
    if all_recommendations:
        print(f"\nüì± –¢–ï–°–¢ –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø –û–¢–ß–ï–¢–ê:")
        print(f"–í—Å–µ–≥–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {len(all_recommendations)}")
        
        formatted_report = enhanced_formatter.format_enhanced_report(all_recommendations)
        print("\n" + "="*50)
        print("–°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ù–´–ô –û–¢–ß–ï–¢:")
        print("="*50)
        print(formatted_report)
        print("="*50)
        
        return True
    else:
        print("\n‚ùå –ù–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return False

def test_totals_calculator():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ç–æ—Ç–∞–ª–æ–≤ –æ—Ç–¥–µ–ª—å–Ω–æ"""
    print("\nüìä –¢–ï–°–¢ –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê –¢–û–¢–ê–õ–û–í")
    print("=" * 35)
    
    test_handball_matches = [
        {
            'team1': '–ö–æ–º–∞–Ω–¥–∞ –ê', 'team2': '–ö–æ–º–∞–Ω–¥–∞ –ë',
            'score': '28:22', 'minute': '48',
            'expected_total': '–¢–ú', 'expected_tempo': '–ú–ï–î–õ–ï–ù–ù–´–ô'
        },
        {
            'team1': '–ö–æ–º–∞–Ω–¥–∞ –í', 'team2': '–ö–æ–º–∞–Ω–¥–∞ –ì', 
            'score': '35:30', 'minute': '45',
            'expected_total': '–¢–ë', 'expected_tempo': '–ë–´–°–¢–†–´–ô'
        }
    ]
    
    for test_data in test_handball_matches:
        match = MatchData(
            sport='handball',
            team1=test_data['team1'],
            team2=test_data['team2'],
            score=test_data['score'],
            minute=test_data['minute'],
            league='Test League',
            link='test'
        )
        
        totals_result = totals_calculator.calculate_handball_totals(match)
        
        if totals_result:
            print(f"‚úÖ {match.team1} vs {match.team2} ({match.score}, {match.minute}'):")
            print(f"   –ü—Ä–æ–≥–Ω–æ–∑: {totals_result['recommendation']}")
            print(f"   –¢–µ–º–ø: {totals_result['tempo']}")
            print(f"   –†–∞—Å—á–µ—Ç: {totals_result['predicted_total']} (—Ç–æ—á–Ω—ã–π: {totals_result['predicted_total_float']:.2f})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –¥–ª—è {match.team1} vs {match.team2}")

if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ç–æ—Ç–∞–ª–æ–≤
    test_totals_calculator()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    test_enhanced_analyzer()