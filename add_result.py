#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –≤—Ä—É—á–Ω—É—é
"""

import sys
import logging
from ml_tracking_system import ml_tracker

logging.basicConfig(level=logging.INFO)

def add_match_result():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Ç—á–∞ –≤—Ä—É—á–Ω—É—é"""
    
    if len(sys.argv) < 6:
        print("üìä –î–û–ë–ê–í–õ–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–ê –ü–†–û–ì–ù–û–ó–ê")
        print("=" * 35)
        print()
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print('python3 add_result.py "–ö–æ–º–∞–Ω–¥–∞1" "–ö–æ–º–∞–Ω–¥–∞2" "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è" "–†–µ–∑—É–ª—å—Ç–∞—Ç" "–ó–∞–º–µ—Ç–∫–∏"')
        print()
        print("–ü—Ä–∏–º–µ—Ä—ã:")
        print('python3 add_result.py "Dinthar FC" "–ü–µ–∫—Ö—ç–º –¢–∞—É–Ω" "–ü1" "loss" "–ú–∞—Ç—á –∑–∞–≤–µ—Ä—à–∏–ª—Å—è 2:3"')
        print('python3 add_result.py "–ú–∞—Ä–∫—É—Å –£–æ–ª—Ç–µ—Ä—Å" "–≠–Ω—Ä–∏–∫–µ –ë–æ–≥–æ" "–ü–æ–±–µ–¥–∞ –∏–≥—Ä–æ–∫–∞" "win" "–í—ã–∏–≥—Ä–∞–ª 2:1 –ø–æ —Å–µ—Ç–∞–º"')
        print()
        print("–†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print("  win   - –≤—ã–∏–≥—Ä—ã—à")
        print("  loss  - –ø—Ä–æ–∏–≥—Ä—ã—à")
        print("  push  - –≤–æ–∑–≤—Ä–∞—Ç")
        print()
        return False
    
    team1 = sys.argv[1]
    team2 = sys.argv[2] 
    recommendation = sys.argv[3]
    result = sys.argv[4]
    notes = sys.argv[5] if len(sys.argv) > 5 else ""
    
    print(f"üìä –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:")
    print(f"–ú–∞—Ç—á: {team1} vs {team2}")
    print(f"–ü—Ä–æ–≥–Ω–æ–∑: {recommendation}")
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    print(f"–ó–∞–º–µ—Ç–∫–∏: {notes}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    if result not in ['win', 'loss', 'push']:
        print("‚ùå –û—à–∏–±–∫–∞: —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 'win', 'loss' –∏–ª–∏ 'push'")
        return False
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ ML —Å–∏—Å—Ç–µ–º—É
        ml_tracker.add_manual_result(team1, team2, recommendation, result, notes)
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ ML –ª–æ–≥")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = ml_tracker.generate_daily_stats()
        if stats:
            total = stats['total_predictions']
            wins = stats['wins'] 
            losses = stats['losses']
            win_rate = stats['win_rate']
            
            print(f"\nüìà –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –¥–µ–Ω—å:")
            print(f"–ü—Ä–æ–≥–Ω–æ–∑–æ–≤: {total}")
            print(f"–í—ã–∏–≥—Ä—ã—à–µ–π: {wins}")
            print(f"–ü—Ä–æ–∏–≥—Ä—ã—à–µ–π: {losses}")
            print(f"–í–∏–Ω—Ä–µ–π—Ç: {win_rate:.1f}%")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {e}")
        return False

def show_daily_stats():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–Ω–µ–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    try:
        stats = ml_tracker.generate_daily_stats()
        
        if not stats or stats['total_predictions'] == 0:
            print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ–∫–∞ –ø—É—Å—Ç–∞")
            return
        
        print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó–ê –î–ï–ù–¨:")
        print("=" * 25)
        print(f"–í—Å–µ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤: {stats['total_predictions']}")
        print(f"–° —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏: {stats['predictions_with_results']}")
        print(f"–í—ã–∏–≥—Ä—ã—à–µ–π: {stats['wins']}")
        print(f"–ü—Ä–æ–∏–≥—Ä—ã—à–µ–π: {stats['losses']}")
        print(f"–í–∏–Ω—Ä–µ–π—Ç: {stats['win_rate']:.1f}%")
        
        # –ü–æ –≤–∏–¥–∞–º —Å–ø–æ—Ä—Ç–∞
        by_sport = stats.get('by_sport', {})
        if by_sport:
            print("\n–ü–æ –≤–∏–¥–∞–º —Å–ø–æ—Ä—Ç–∞:")
            for sport, data in by_sport.items():
                if data['total'] > 0:
                    print(f"  {sport}: {data['wins']}/{data['total']} ({data['win_rate']:.1f}%)")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

if __name__ == "__main__":
    if len(sys.argv) == 2 and sys.argv[1] == "stats":
        show_daily_stats()
    else:
        add_match_result()