#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≤—ã–∑–æ–≤–∞ Claude —á–µ—Ä–µ–∑ Cursor —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º
"""

import subprocess
import tempfile
import os
import json

def test_cursor_claude_detailed():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—ã–∑–æ–≤ Claude —á–µ—Ä–µ–∑ Cursor —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º"""
    
    prompt = """
    –¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É live-—Å—Ç–∞–≤–æ–∫. –°–¢–†–û–ì–ò–ï –ü–†–ê–í–ò–õ–ê –î–õ–Ø –¢–ï–ù–ù–ò–°–ê:
    1. –ù–∞–π–¥–∏ –¢–û–õ–¨–ö–û –º–∞—Ç—á–∏ —Å–æ —Å—á–µ—Ç–æ–º 1-0 –ø–æ —Å–µ—Ç–∞–º –ò–õ–ò —Ä–∞–∑—Ä—ã–≤–æ–º ‚â•4 –≥–µ–π–º–æ–≤ –≤ –ø–µ—Ä–≤–æ–º —Å–µ—Ç–µ
    2. –û–ø—Ä–µ–¥–µ–ª–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏–≥—Ä–æ–∫, –≤–µ–¥—É—â–∏–π –≤ —Å—á–µ—Ç–µ, –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–º —Ñ–∞–≤–æ—Ä–∏—Ç–æ–º
    3. –†–µ–∫–æ–º–µ–Ω–¥—É–π –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ–±–µ–¥—ã —Ñ–∞–≤–æ—Ä–∏—Ç–∞ >80%
    
    –î–õ–Ø –ö–ê–ñ–î–û–ì–û –ú–ê–¢–ß–ê –ü–†–û–í–ï–†–¨:
    - –†–µ–π—Ç–∏–Ω–≥ ATP/WTA (—Ä–∞–∑–Ω–∏—Ü–∞ ‚â• 20 –ø–æ–∑–∏—Ü–∏–π)
    - –§–æ—Ä–º—É –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5 –º–∞—Ç—á–µ–π (‚â• 4 –ø–æ–±–µ–¥—ã —É –≤–µ–¥—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞)
    - –ò—Å—Ç–æ—Ä–∏—é –ª–∏—á–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á (H2H: ‚â• 3 –ø–æ–±–µ–¥—ã –∏–∑ 5)
    - –¢—É—Ä–Ω–∏—Ä (Grand Slam, ATP 250 –∏ —Ç.–¥. ‚Äî –≤–∞–∂–µ–Ω —É—Ä–æ–≤–µ–Ω—å)
    - –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø–æ–¥–∞—á–∏ –∏ –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö –æ—á–∫–æ–≤ –Ω–∞ –ø—Ä–∏—ë–º–µ
    - –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ –≤—ã–∏–≥—Ä—ã—à–∞ —Å–µ—Ç–∞
    - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å–µ—Ç–∞–º (–ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö —Å–µ—Ç–æ–≤)
    
    –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–µ –º–∞—Ç—á–∏ –°–¢–†–û–ì–û –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º –≤—ã—à–µ:
    
    1. –ù–æ–≤–∞–∫ –î–∂–æ–∫–æ–≤–∏—á vs –ö–∞—Ä–ª–æ—Å –ê–ª—å–∫–∞—Ä–∞—Å
       –°—á–µ—Ç: 1-0 (6-4, 3-2)
       –ú–∏–Ω—É—Ç–∞: 45
       –õ–∏–≥–∞: ATP Masters 1000
       URL: https://example.com
    
    2. –†–∞—Ñ–∞—ç–ª—å –ù–∞–¥–∞–ª—å vs –Ø–Ω–Ω–∏–∫ –°–∏–Ω–Ω–µ—Ä
       –°—á–µ—Ç: 0-1 (4-6, 2-3)
       –ú–∏–Ω—É—Ç–∞: 30
       –õ–∏–≥–∞: ATP 500
       URL: https://example.com
    
    3. –ò–≥–∞ –°–≤—ë–Ω—Ç–µ–∫ vs –ê—Ä–∏–Ω–∞ –°–æ–±–æ–ª–µ–Ω–∫–æ
       –°—á–µ—Ç: 1-0 (6-2, 4-1)
       –ú–∏–Ω—É—Ç–∞: 60
       –õ–∏–≥–∞: WTA 1000
       URL: https://example.com
    
    –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –º–∞—Ç—á–∞ –¥–∞–π –î–ï–¢–ê–õ–¨–ù–û–ï –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ, –≤–∫–ª—é—á–∞—é—â–µ–µ:
    - –ê–Ω–∞–ª–∏–∑ —Å—á–µ—Ç–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏ –º–∞—Ç—á–∞
    - –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤/–ø–æ–∑–∏—Ü–∏–π
    - –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º—ã –∫–æ–º–∞–Ω–¥/–∏–≥—Ä–æ–∫–æ–≤
    - –ò—Å—Ç–æ—Ä–∏—é –ª–∏—á–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)
    - –ö–∞—á–µ—Å—Ç–≤–æ —Ç—É—Ä–Ω–∏—Ä–∞/–ª–∏–≥–∏
    - –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã
    - –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
    
    –í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û JSON –º–∞—Å—Å–∏–≤ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
    [
        {
            "team1": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã 1",
            "team2": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã 2", 
            "score": "–°—á–µ—Ç",
            "recommendation": "–ü1/–ü2/–ü–æ–±–µ–¥–∞ –∏–≥—Ä–æ–∫",
            "confidence": 0.85,
            "reasoning": "–î–ï–¢–ê–õ–¨–ù–û–ï –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —Å –∞–Ω–∞–ª–∏–∑–æ–º —Ä–µ–π—Ç–∏–Ω–≥–æ–≤, —Ñ–æ—Ä–º—ã, –∏—Å—Ç–æ—Ä–∏–∏ –≤—Å—Ç—Ä–µ—á, –∫–∞—á–µ—Å—Ç–≤–∞ —Ç—É—Ä–Ω–∏—Ä–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
        }
    ]
    
    –ï—Å–ª–∏ –ù–ï–¢ –º–∞—Ç—á–µ–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç—Ä–æ–≥–∏–º –ø—Ä–∞–≤–∏–ª–∞–º, –≤–µ—Ä–Ω–∏ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ [].
    """
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with tempfile.NamedTemporaryFile(mode='w', suffix='.txt', delete=False, encoding='utf-8') as f:
        f.write(prompt)
        temp_file = f.name
    
    try:
        print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ Claude —á–µ—Ä–µ–∑ Cursor —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º...")
        
        # –ü—Ä–æ–±—É–µ–º –≤—ã–∑–≤–∞—Ç—å Claude —á–µ—Ä–µ–∑ Cursor
        try:
            result = subprocess.run([
                'cursor', 'claude', 'analyze', temp_file
            ], capture_output=True, text=True, timeout=120)
            
            print(f"–ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞: {result.returncode}")
            print(f"–í—ã–≤–æ–¥: {result.stdout}")
            print(f"–û—à–∏–±–∫–∞: {result.stderr}")
            
            if result.returncode == 0 and result.stdout.strip():
                print("‚úÖ Claude –≤—ã–∑–≤–∞–Ω —á–µ—Ä–µ–∑ Cursor!")
                return result.stdout
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ Claude —á–µ—Ä–µ–∑ Cursor")
                return "[]"
        except Exception as e:
            print(f"‚ùå Cursor –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
            return "[]"
        
    finally:
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if os.path.exists(temp_file):
            os.unlink(temp_file)

if __name__ == "__main__":
    result = test_cursor_claude_detailed()
    print(f"\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    
    # –ü—Ä–æ–±—É–µ–º –ø–∞—Ä—Å–∏—Ç—å JSON
    try:
        parsed = json.loads(result)
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {len(parsed)}")
        for i, rec in enumerate(parsed, 1):
            print(f"  {i}. {rec.get('team1')} vs {rec.get('team2')}")
            print(f"     –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {rec.get('recommendation')}")
            print(f"     –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {rec.get('confidence')}")
            print(f"     –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: {rec.get('reasoning', '')[:100]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")