#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª –∞–Ω–∞–ª–∏–∑–∞ —Ñ—É—Ç–±–æ–ª–∞
"""

import json
import logging
from claude_final_integration import ClaudeFinalIntegration
from multi_source_controller import MatchData

logging.basicConfig(level=logging.INFO)

def create_test_matches():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –º–∞—Ç—á–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª"""
    test_matches = [
        # –¢–µ—Å—Ç 1: –¢–æ–ø-–∫–æ–º–∞–Ω–¥–∞ —Å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ–º –≤ 1 –≥–æ–ª
        MatchData(
            sport='football',
            team1='Manchester City',
            team2='Brighton',
            score='1:0',
            minute='67',
            league='Premier League',
            link='test_url_1'
        ),
        
        # –¢–µ—Å—Ç 2: –û–±—ã—á–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ–º –≤ 1 –≥–æ–ª (–Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–π—Ç–∏)
        MatchData(
            sport='football',
            team1='Fulham',
            team2='Brentford',
            score='1:0',
            minute='55',
            league='Premier League',
            link='test_url_2'
        ),
        
        # –¢–µ—Å—Ç 3: –õ—é–±–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ–º –≤ 2 –≥–æ–ª–∞ (–¥–æ–ª–∂–Ω–æ –ø—Ä–æ–π—Ç–∏)
        MatchData(
            sport='football',
            team1='Wolves',
            team2='Crystal Palace',
            score='2:0',
            minute='68',
            league='Premier League',
            link='test_url_3'
        ),
        
        # –¢–µ—Å—Ç 4: –¢–æ–ø-–∫–æ–º–∞–Ω–¥–∞ –≤ —Ç–æ–ø-–ª–∏–≥–µ, –ø–æ–∑–¥–Ω—è—è –º–∏–Ω—É—Ç–∞
        MatchData(
            sport='football',
            team1='Barcelona',
            team2='Getafe',
            score='1:0',
            minute='75',
            league='La Liga',
            link='test_url_4'
        ),
        
        # –¢–µ—Å—Ç 5: –†–∞–Ω–æ –≤–æ –≤—Ç–æ—Ä–æ–º —Ç–∞–π–º–µ (–Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–π—Ç–∏)
        MatchData(
            sport='football',
            team1='Real Madrid',
            team2='Valencia',
            score='1:0',
            minute='35',
            league='La Liga',
            link='test_url_5'
        ),
        
        # –¢–µ—Å—Ç 6: –ù–∏—á—å—è (–Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–π—Ç–∏)
        MatchData(
            sport='football',
            team1='Liverpool',
            team2='Arsenal',
            score='1:1',
            minute='70',
            league='Premier League',
            link='test_url_6'
        )
    ]
    
    return test_matches

def test_football_analysis():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ñ—É—Ç–±–æ–ª–∞"""
    print("üß™ –¢–ï–°–¢ –ù–û–í–´–• –ü–†–ê–í–ò–õ –ê–ù–ê–õ–ò–ó–ê –§–£–¢–ë–û–õ–ê")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    analyzer = ClaudeFinalIntegration()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –º–∞—Ç—á–∏
    test_matches = create_test_matches()
    
    print(f"üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º {len(test_matches)} –º–∞—Ç—á–µ–π:")
    for i, match in enumerate(test_matches, 1):
        print(f"  {i}. {match.team1} vs {match.team2} - {match.score} ({match.minute}') - {match.league}")
    
    print("\nü§ñ –ó–∞–ø—É—Å–∫ AI-–∞–Ω–∞–ª–∏–∑–∞...")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Ç—á–∏
    recommendations = analyzer.analyze_matches_with_claude(test_matches, 'football')
    
    print(f"\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:")
    print(f"–ù–∞–π–¥–µ–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {len(recommendations)}")
    
    if recommendations:
        print("\n‚úÖ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        for i, rec in enumerate(recommendations, 1):
            print(f"\n{i}. {rec.team1} vs {rec.team2}")
            print(f"   –°—á–µ—Ç: {rec.score}")
            print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {rec.recommendation_value}")
            print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {rec.probability:.1f}%")
            print(f"   –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: {rec.justification}")
    else:
        print("\n‚ùå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("- –ö—Ä–∏—Ç–µ—Ä–∏–∏ —Ñ–∞–≤–æ—Ä–∏—Ç–∏–∑–º–∞ —Å–ª–∏—à–∫–æ–º —Å—Ç—Ä–æ–≥–∏–µ")
        print("- –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å (85%) –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞")
        print("- –í—Ä–µ–º—è –º–∞—Ç—á–∞ –º–µ–Ω–µ–µ 45 –º–∏–Ω—É—Ç")
    
    print("\n" + "=" * 50)

def test_heuristic_directly():
    """–ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–≤—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
    print("üîç –ü–†–Ø–ú–û–ô –¢–ï–°–¢ –≠–í–†–ò–°–¢–ò–ß–ï–°–ö–û–ì–û –ê–ù–ê–õ–ò–ó–ê")
    print("=" * 50)
    
    analyzer = ClaudeFinalIntegration()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∞
    test_match_data = {
        'team1': 'Manchester City',
        'team2': 'Brighton',
        'score': '2:0',
        'minute': '67',
        'league': 'Premier League'
    }
    
    print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–∞—Ç—á: {test_match_data}")
    
    # –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ —ç–≤—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    result = analyzer._analyze_match_heuristic(test_match_data)
    
    if result:
        print("\n‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢ –ê–ù–ê–õ–ò–ó–ê:")
        print(f"–ö–æ–º–∞–Ω–¥—ã: {result['team1']} vs {result['team2']}")
        print(f"–°—á–µ—Ç: {result['score']}")
        print(f"–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {result['recommendation']}")
        print(f"–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result['confidence']:.1%}")
        print(f"–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: {result['reasoning']}")
    else:
        print("\n‚ùå –ú–∞—Ç—á –Ω–µ –ø—Ä–æ—à–µ–ª –∫—Ä–∏—Ç–µ—Ä–∏–∏ –∞–Ω–∞–ª–∏–∑–∞")
    
    print("\n" + "=" * 50)

if __name__ == "__main__":
    test_heuristic_directly()
    print()
    test_football_analysis()